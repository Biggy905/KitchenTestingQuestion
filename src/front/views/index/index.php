<div class="row">
    <div class="col-12">
        <h1 class="text-center">
            Тестовая работа от Александра Болгова
        </h1>
        <a href="<?= \yii\helpers\Url::to(['index/report'])?>">Посмотреть отчет</a>
    </div>
    <div class="divi"
    <div class="col-12">
        <h2 class="text-center">
            Тестовое задание (перед выполнением ознакомьтесь ПОЛНОСТЬЮ)
        </h2>
        <p>
            Развернуть проект на Yii 2 версии 2.0.47 (advanced-шаблон) и сделать три скрипта, а также CRUD:
        </p>
        <ul>
            <li>
                Скрипт авторизации в console-части, то есть он должен быть доступен через консоль на сервере (командой
                php yii cron/get-token). Принимает в параметрах логин и пароль - возвращает токен, действующий 5 минут,
                который нужно использовать для второго и третьего скриптов. Пользователей сгенерировать через сидер,
                форму регистрации и т.д. делать не нужно.
            </li>
            <li>
                Скрипт во frontend-части (поддержка GET, POST). Принимает данные в формате JSON в параметре data и
                сохраняет их в БД возвращая идентификатор, а также время и память затраченные на обработку запроса и
                сохранение объекта в БД. Скрипт должен работать исключительно с аутентификацией по токену, полученному в
                console-части. Аутентификация должна проходить по заголовку в запросе.
            </li>
            <li>
                Скрипт во frontend-части (поддержка GET, POST). Принимает отдельными параметрами идентификатор записи с
                БД и код, который нужно выполнить по отношению к JSON-объекту, который после выполнения нужно обновить.
                Код подразумевает уже выполненный json_decode в переменную $data по отношению к объекту с БД и содержит
                инструкции по обновлению частей JSON-объекта, например:<br/>
                $data->list->sublist[0] = 0;<br/>
                $data->list->sublist[1] = 2;<br/>
                Скрипт, также как и второй, должен работать исключительно с аутентификацией по токену, полученному в
                console-части. Аутентификация должна проходить по заголовку в запросе. Обновить объект может
                исключительно тот же пользователь, что его создал. Для удобства тестирования необходимо сделать форму
                (подробнее в комментариях).
            </li>
            <li>
                CRUD в backend-части. Отображает все сохраненные с frontend-части объекты с возможностью удаления
                объектов (DELETE). Просмотр (READ) должен предусматривать формирование из объекта JSON маркированный
                HTML-список с поддержкой разворачивания/сворачивания отдельных элементов. Элементы списка должны
                включать в себя название, тип объекта и значение в случае конца иерархии объектов. Возможность создания
                и обновления объектов (CREATE, UPDATE) должна быть доступна исключительно во frontend-части с
                авторизацией по токену.
            </li>
        </ul>
        <p>
            Комментарии:
        </p>
        <ul>
            <li>
                frontend-часть это не фронтенд приложения, также как и backend-часть это не бэкенд приложения. Уверенные
                знания Yii 2, требуемые в вакансии, подразумевают знание структуры <a
                        href="https://www.yiiframework.com/extension/yiisoft/yii2-app-advanced/doc/guide/2.0/en/structure-applications">advanced-шаблона
                    Yii 2</a>.
            </li>
            <li>
                Второй и третий скрипты должны работать как по GET, так и по POST. В связи с этим необходимо сделать
                форму для удобства с выбором типа запроса, а также вводом токена, который должен передаваться в
                заголовке.
            </li>
            <li>
                Описание “данные в формате JSON” подразумевает любые данные в формате JSON, включая вложенные массивы во
                вложенных массивах либо же пустой JSON. Скрипт не должен привязываться к какому-то конкретному
                JSON-объекту, он должен уметь обрабатывать любые данные в формате JSON.
            </li>
            <li>
                Подразумевается, что во 2 и 3 скрипт не могут прийти невалидные данные (неправильный JSON, некорректный
                код), поэтому делать валидацию параметров, за исключением проверки токена, приходящего в заголовках
                запроса, нет необходимости. Однако ее можно сделать на ваше усмотрение, если вы выполните все
                дополнительные задания.
            </li>
        </ul>
        <p>
            Весь проект и ход выполнения заданий нужно выложить в репозитории на GitHub, первый коммит - базовый
            advanced-шаблон Yii 2. Обязательно описать файл README.md - как запустить проект и что он делает на
            английском, но не машинным переводом, так как вакансия подразумевает знание английского на уровне B1+. Также
            нужно добавить в README.MD пример конфига Nginx или Apache для запуска проекта.
        </p>
        <p>
            Также необходимо описать минимальный набор тестов, для того чтобы убедиться что ваше приложение
            работоспособно. Желательно использовать PHPUnit или Codeception.
        </p>
        <p>
            <b>Дополнительное задание № 1:</b>
            ограничьте количество запросов к сайту определенным количеством запросов, задаваемым в конфиге и возвращайте
            429, если лимит будет превышен. Задание опциональное, то есть необязательное.
        </p>
        <p>
            <b>Дополнительное задание № 2:</b>
            добавить логирование всех запросов с выводом в backend-части приложения. Формат вывода и выводимые данные на
            ваше усмотрение. Задание опциональное, то есть необязательное.
        </p>
        <p>
            <b>Дополнительное задание № 3:</b>
            задеплоить проект (куда - на ваш выбор), то есть разместить его в сети и приложить в репозиторий ссылку.
            Задание опциональное, то есть необязательное.
        </p>
        <p>
            Перед выполнением тестового задания составить план работ/модулей которые надо реализовать. Дать оценку
            времени, которое будет затрачено на каждый из пунктов. Оформить каждый пункт как отдельный коммит с
            осмысленным названием на английском языке. По окончанию реализации задачи записать сколько реально времени
            было потрачено и комментарий по необходимости.
        </p>
        <p>
            Должен получиться примерно такой отчет:
        </p>
        <table border="1" class="table-bordered table-responsive col-12">
            <thead>
            <tr>
                <td class="text-center p-3">
                    <b>
                        Задача
                    </b>
                </td>
                <td class="text-center p-3">
                    <b>
                        Оценка
                    </b>
                </td>
                <td class="text-center p-3">
                    <b>
                        Затрачено
                    </b>
                </td>
                <td class="text-center p-3">
                    <b>
                        Комментарий
                    </b>
                </td>
            </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="text-center p-2">
                        Настройка окружения
                    </td>
                    <td class="text-center p-2">
                        1 час
                    </td>
                    <td class="text-center p-2">
                        40 минут
                    </td>
                    <td class="text-center p-2">
                        Нашел хорошую инструкцию
                    </td>
                </tr>
                <tr>
                    <td class="text-center p-2">
                        Установка фреймворка
                    </td>
                    <td class="text-center p-2">
                        20 минут
                    </td>
                    <td class="text-center p-2">
                        30 минут
                    </td>
                    <td class="text-center p-2">
                        Забыл установить composer
                    </td>
                </tr>
            </tbody>

        </table>
        <p>
            Появятся вопросы - не стесняйтесь обращаться к HR, он ответит на любой вопрос, по необходимости уточнит его
            у тимлида.
        </p>
        <p>
            Удачи и надеемся, что у вас всё получится!
        </p>
    </div>
</div>